/**
 * 
 */
package org.msh.etbm.services;

import java.util.List;

import javax.persistence.EntityManager;

import org.msh.etbm.desktop.app.App;
import org.msh.etbm.entities.Tag;
import org.msh.etbm.entities.Workspace;
import org.springframework.stereotype.Component;

/**
 * @author Ricardo Memoria
 *
 */
@Component
public class TagServices {

	/**
	 * Update all the tags from the current workspace
	 */
	public void updateTags() {
		List<Tag> tags = App.getEntityManager()
				.createQuery("from Tag where workspace.id = #{defaultWorkspace.id}")
				.getResultList();

		for (Tag tag: tags) {
			if (tag.isAutogenerated()) {
				
			}
		}
	}
	
	
	/**
	 * Update all cases that use the given tag. The tag must be auto generated, otherwise
	 * an exception is rose 
	 * @param tag
	 */
	public void updateAutomaticTag(Tag tag) {
		if (!tag.isAutogenerated())
			throw new RuntimeException("Tag must be auto generated");

		EntityManager entityManager = App.getEntityManager();

		// remove previous tags
		String sql = "delete from tags_case where tag_id = :id";
		entityManager.createNativeQuery(sql).setParameter("id", tag.getId()).executeUpdate();

		Integer wsid = ((Workspace)App.getComponent("defaultWorkspace")).getId();

		// is tag active ?
		if (tag.isActive()) {
			// include new tags
			sql = "insert into tags_case (case_id, tag_id) " +
					"select a.id, " + tag.getId() + " from tbcase a join patient p on p.id=a.patient_id " +
					"where " + tag.getSqlCondition() + " and p.workspace_id = :id";
			entityManager.createNativeQuery(sql).setParameter("id", wsid).executeUpdate();
		}
		
	}
}
